<%= link_to 'Back to Dashboard', dashboard_path, class: 'btn btn-secondary' %>

<% if @playlist_songs.count >= 12 %>
  <p class="text-danger">Playlist is full. You cannot add another song.</p>
<% else %>
  <%= link_to 'Add New Song', new_playlist_playlist_song_path(@playlist), class: 'btn btn-primary' %>
<% end %>
<%= link_to 'Edit Playlist Properties', edit_playlist_path(@playlist), class: 'btn btn-primary' %>
<h1><%= @playlist.title %></h1>
<h2>From: <%= @playlist.from_name %></h2>
<h2>To: <%= @playlist.to_name %></h2>
<p><%= @playlist.general_message %></p>

<% if @playlist_songs.any? %>
  <div id="sortable-grid" class="grid-layout">
    <% @playlist_songs.each_with_index do |playlist_song, index| %>
      <div class="grid-item" data-id="<%= playlist_song.id %>">
        <p class="place-number"><%= index + 1 %></p>
        <p class="message"><%= playlist_song.message %></p>
        <p><%= playlist_song.song.title %> - <%= playlist_song.song.artist %></p>
        <%= link_to 'Edit', edit_playlist_playlist_song_path(@playlist, playlist_song) %> |
        <%= link_to 'Delete', playlist_playlist_song_path(@playlist, playlist_song), method: :delete, data: { turbo_method: :delete, turbo_confirm: "Are you sure? This will delete the song with your personal message, and CANNOT be reverted!" } %>
      </div>
    <% end %>
  </div>
<% else %>
  <p>No songs in this playlist.</p>
<% end %>

<%= turbo_stream_from 'sortable-grid' %>

<script>
  document.addEventListener('turbo:load', function () {
    const gridElement = document.getElementById('sortable-grid');
    if (gridElement) {
      new Sortable(gridElement, {
        swapThreshold: 0.75,
        swapClass: 'highlight',
        animation: 500,
        ghostClass: 'sortable-ghost',
        onEnd: function(evt) {
          const order = this.toArray();
          fetch('/update_playlist_order', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
            },
            body: JSON.stringify({ playlist_id: "<%= @playlist.id %>", order: order })
          }).then(response => {
            if (response.ok) {
              console.log('Order updated');
              updatePlaceNumbers();
            } else {
              console.error('Error updating order');
            }
          });
        }
      });
    }
  });

  function updatePlaceNumbers() {
    const placeNumbers = document.getElementsByClassName('place-number');
    Array.from(placeNumbers).forEach((placeNumber, index) => {
      placeNumber.innerText = index + 1;
    });
  }
</script>

<%= link_to 'Preview Playlist', preview_playlist_path(@playlist), class: 'btn btn-primary' %>
